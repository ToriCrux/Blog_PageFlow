"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/Home/page",{

/***/ "(app-pages-browser)/./src/app/API/UserAPI/ApiUserData.ts":
/*!********************************************!*\
  !*** ./src/app/API/UserAPI/ApiUserData.ts ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchUserData: () => (/* binding */ fetchUserData)\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:8080\";\nconst fetchUserData = async ()=>{\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n        console.error(\"Token ou userId não encontrado no localStorage.\");\n        return null;\n    }\n    try {\n        const decoded = parseJwt(token);\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/api/v1/users/\").concat(decoded.id), {\n            method: \"GET\",\n            headers: {\n                Authorization: \"Bearer \".concat(token),\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) throw new Error(\"Erro ao buscar usuário.\");\n        const user = await response.json();\n        return user;\n    } catch (error) {\n        console.error(\"Erro ao buscar dados do usuário:\", error);\n        return null;\n    }\n};\nfunction parseJwt(token) {\n    try {\n        const base64Url = token.split(\".\")[1];\n        const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        const jsonPayload = decodeURIComponent(atob(base64).split(\"\").map((c)=>\"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));\n        return JSON.parse(jsonPayload);\n    } catch (e) {\n        console.error(\"Erro ao decodificar o token:\", e);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvQVBJL1VzZXJBUEkvQXBpVXNlckRhdGEudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGVBQWU7QUFXZCxNQUFNQyxnQkFBZ0I7SUFDM0IsTUFBTUMsUUFBUUMsYUFBYUMsT0FBTyxDQUFDO0lBRW5DLElBQUksQ0FBQ0YsT0FBTztRQUNWRyxRQUFRQyxLQUFLLENBQUM7UUFDZCxPQUFPO0lBQ1Q7SUFFQSxJQUFJO1FBQ0YsTUFBTUMsVUFBVUMsU0FBU047UUFDekIsTUFBTU8sV0FBVyxNQUFNQyxNQUFNLEdBQWdDSCxPQUE3QlAsY0FBYSxrQkFBMkIsT0FBWE8sUUFBUUksRUFBRSxHQUFJO1lBQ3pFQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1BDLGVBQWUsVUFBZ0IsT0FBTlo7Z0JBQ3pCLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUEsSUFBSSxDQUFDTyxTQUFTTSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNO1FBRWxDLE1BQU1DLE9BQU8sTUFBTVIsU0FBU1MsSUFBSTtRQUNoQyxPQUFPRDtJQUNULEVBQUUsT0FBT1gsT0FBTztRQUNkRCxRQUFRQyxLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUYsU0FBU0UsU0FBU04sS0FBYTtJQUM3QixJQUFJO1FBQ0YsTUFBTWlCLFlBQVlqQixNQUFNa0IsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3JDLE1BQU1DLFNBQVNGLFVBQVVHLE9BQU8sQ0FBQyxNQUFNLEtBQUtBLE9BQU8sQ0FBQyxNQUFNO1FBQzFELE1BQU1DLGNBQWNDLG1CQUNsQkMsS0FBS0osUUFDRkQsS0FBSyxDQUFDLElBQ05NLEdBQUcsQ0FBQyxDQUFDQyxJQUFNLE1BQU0sQ0FBQyxPQUFPQSxFQUFFQyxVQUFVLENBQUMsR0FBR0MsUUFBUSxDQUFDLEdBQUUsRUFBR0MsS0FBSyxDQUFDLENBQUMsSUFDOURDLElBQUksQ0FBQztRQUdWLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ1Y7SUFDcEIsRUFBRSxPQUFPVyxHQUFHO1FBQ1Y3QixRQUFRQyxLQUFLLENBQUMsZ0NBQWdDNEI7UUFDOUMsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVklDVE9SSUFcXElkZWFQcm9qZWN0c1xcQmxvZ19QYWdlRmxvdy1tYWluXFxQYWdlRmxvdy1mcm9udFxcc3JjXFxhcHBcXEFQSVxcVXNlckFQSVxcQXBpVXNlckRhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQVBJX0JBU0VfVVJMID0gXCJodHRwOi8vbG9jYWxob3N0OjgwODBcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCbG9nVXNlciB7XG4gIGlkOiBudW1iZXI7XG4gIG5hbWU6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgcm9sZTogc3RyaW5nO1xuICB1c2VyVHlwZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgZmV0Y2hVc2VyRGF0YSA9IGFzeW5jICgpOiBQcm9taXNlPEJsb2dVc2VyIHwgbnVsbD4gPT4ge1xuICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIik7XG5cbiAgaWYgKCF0b2tlbikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJUb2tlbiBvdSB1c2VySWQgbsOjbyBlbmNvbnRyYWRvIG5vIGxvY2FsU3RvcmFnZS5cIik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IGRlY29kZWQgPSBwYXJzZUp3dCh0b2tlbik7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRV9VUkx9L2FwaS92MS91c2Vycy8ke2RlY29kZWQuaWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCxcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKFwiRXJybyBhbyBidXNjYXIgdXN1w6FyaW8uXCIpO1xuXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICByZXR1cm4gdXNlciBhcyBCbG9nVXNlcjtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBidXNjYXIgZGFkb3MgZG8gdXN1w6FyaW86XCIsIGVycm9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcblxuZnVuY3Rpb24gcGFyc2VKd3QodG9rZW46IHN0cmluZykge1xuICB0cnkge1xuICAgIGNvbnN0IGJhc2U2NFVybCA9IHRva2VuLnNwbGl0KFwiLlwiKVsxXTtcbiAgICBjb25zdCBiYXNlNjQgPSBiYXNlNjRVcmwucmVwbGFjZSgvLS9nLCBcIitcIikucmVwbGFjZSgvXy9nLCBcIi9cIik7XG4gICAgY29uc3QganNvblBheWxvYWQgPSBkZWNvZGVVUklDb21wb25lbnQoXG4gICAgICBhdG9iKGJhc2U2NClcbiAgICAgICAgLnNwbGl0KFwiXCIpXG4gICAgICAgIC5tYXAoKGMpID0+IFwiJVwiICsgKFwiMDBcIiArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikpLnNsaWNlKC0yKSlcbiAgICAgICAgLmpvaW4oXCJcIilcbiAgICApO1xuXG4gICAgcmV0dXJuIEpTT04ucGFyc2UoanNvblBheWxvYWQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gZGVjb2RpZmljYXIgbyB0b2tlbjpcIiwgZSk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJBUElfQkFTRV9VUkwiLCJmZXRjaFVzZXJEYXRhIiwidG9rZW4iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiY29uc29sZSIsImVycm9yIiwiZGVjb2RlZCIsInBhcnNlSnd0IiwicmVzcG9uc2UiLCJmZXRjaCIsImlkIiwibWV0aG9kIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJvayIsIkVycm9yIiwidXNlciIsImpzb24iLCJiYXNlNjRVcmwiLCJzcGxpdCIsImJhc2U2NCIsInJlcGxhY2UiLCJqc29uUGF5bG9hZCIsImRlY29kZVVSSUNvbXBvbmVudCIsImF0b2IiLCJtYXAiLCJjIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwic2xpY2UiLCJqb2luIiwiSlNPTiIsInBhcnNlIiwiZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/API/UserAPI/ApiUserData.ts\n"));

/***/ })

});